#version: "3.7"

services:
  app:
    container_name: test-app
    build:
      context: .
      dockerfile: _docker/app/Dockerfile
    restart: on-failure
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - laravel
    depends_on:
      - elasticsearch
      - db
      - nginx

  nginx:
    container_name: test-nginx
    image: nginx:alpine
    restart: on-failure
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./_docker/nginx/conf.d:/etc/nginx/conf.d/
    networks:
      - laravel

  db:
    container_name: test-db
    image: mysql:8.0
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: test-elastic
      MYSQL_DATABASE: test-elastic
      MYSQL_USER: root
    volumes:
      - ./tmp/db:/var/lib/mysql
    ports:
      - "3388:3306"
    networks:
      - laravel

  elasticsearch:
    container_name: test-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
#      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
#      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=false
    volumes:
      - ./tmp/esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - laravel

  kibana:
    container_name: test-kibana
    image: docker.elastic.co/kibana/kibana:8.15.3
    environment:
      - SERVER_NAME=localhost
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOST}
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    networks:
      - laravel
    depends_on:
      - elasticsearch

networks:
  laravel:
    driver: bridge
